<?phpnamespace KooijmanInc\Suzie\FormBuilder;use KooijmanInc\Suzie\FormBuilder\FormCollector\FormCollector;use KooijmanInc\Suzie\SuzieInterface;use Symfony\Contracts\Translation\TranslatorInterface;use Symfony\Component\HttpFoundation\RequestStack;class FormBuilderFactory{    public function create(SuzieInterface $suzie, string $formBuilderClassName, TranslatorInterface $translator, RequestStack $requestStack, array $data = [], array $base = [], bool $raw = false)    {//dump($data, $base);        $formBuilder = new $formBuilderClassName($suzie, $translator, $requestStack);        if (!empty($data)) {            $formBuilder->toBeSetInputs($data);            if ($raw === true) {                $formBuilder = $this->fillRaw($formBuilder, $data, $base);            }            $formBuilder->completeForm();        }        return $formBuilder;    }    protected function fillRaw(FormBuilderInterface &$formBuilder, array &$data, array &$base)    {//dump($base);        $formBuilder->formCollector = new FormCollector($base['id'] ?? null, $formBuilder->requestStack, $formBuilder->translator);        $formBuilder->formCollector->name = $formBuilder->name;        $formBuilder->formElements($data, $base);        $formBuilder->setElements(['action' => $formBuilder->requestStack->getCurrentRequest()->getPathInfo()]);        $formBuilder->setFormElementsValidation($data);        return $formBuilder;    }}