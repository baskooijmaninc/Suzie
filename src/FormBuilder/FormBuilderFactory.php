<?phpnamespace KooijmanInc\Suzie\FormBuilder;use KooijmanInc\Suzie\FormBuilder\FormCollector\FormCollector;use KooijmanInc\Suzie\SuzieInterface;use Symfony\Contracts\Translation\TranslatorInterface;class FormBuilderFactory{    public function create(SuzieInterface $suzie, string $formBuilderClassName, TranslatorInterface $translator, array $data = [], array $base = [], bool $raw = false)    {//dump($data, $base);        $formBuilder = new $formBuilderClassName($suzie, $translator);        $formBuilder->toBeSetInputs($data);        if ($raw === true) {            $formBuilder = $this->fillRaw($formBuilder, $data, $base);        }        //$formBuilder->completeForm();        return $formBuilder;    }    protected function fillRaw(FormBuilderInterface &$formBuilder, array &$data, array &$base)    {        $formBuilder->formCollector = new FormCollector($base['id'] ?? null);        $formBuilder->formElements($data, $base);        //$formBuilder->setElements();        return $formBuilder;    }}