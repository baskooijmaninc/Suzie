<?phpnamespace KooijmanInc\Suzie\FormBuilder\FormParts\Form;abstract class AbstractForm implements FormInterface{    /**     * @var string     */    protected string $id;    protected string $action = '/';    protected string $method = 'post';    protected string $target = '_self';    protected string $autoComplete = 'off';    protected string $acceptCharset = 'utf-8';    protected string $enctype = 'application/x-www-form-urlencoded';    protected ?string $name = null;    protected ?string $rel = null;    protected bool $novalidate = false;    private array $methodAllowed = ['get', 'post', 'put', 'delete'];    private array $targetAllowed = ['_blank', '_self', '_parent', '_top', 'framename'];    private array $autoCompleteAllowed = ['off', 'on'];    private array $acceptCharsetAllowed = ['utf-8', 'utf-16', 'windows-1252', 'iso-8859-1'];    private array $enctypeAllowed = ['application/x-www-form-urlencoded', 'multipart/form-data', 'text/plain'];    private array $novalidateAllowed = [true, false];    private array $relAllowed = ['external', 'help', 'license', 'next', 'nofollow', 'noopener', 'noreferrer', 'opener', 'prev', 'search'];    public function __construct(string $id)    {        $this->id = $id.'-form';    }    public function getFormAttributes()    {        return $this;    }    public function __set(string $name, $value)    {dump('__get: ', $name, $value);    }    public function &__get(string $name)    {dump('__get: ', $name);    }    public function __call(string $name, array $arguments)    {dump('__call: ', $name, $arguments);    }}